[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "tsercom"
requires-python = ">=3.10"
dynamic = ["version"]
license = { text = "Apache-2.0" }
readme = "README.md"
keywords = ["ts", "time", "time series", "communication", "rpc", "serialization", "transport", "channel", "grpc"]
description = "Time-SERies COMmunication using gRPC for data science and machine learning applications."
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: Apache Software License"
]
authors = [
  { name = "Ryan Keane" },
]
dependencies = [
  "grpcio>=1.62.0, <1.74.0",
  "grpcio-status>=1.62.0, <1.74.0",
  "grpcio-tools>=1.62.0, <1.74.0",
  "grpcio-health-checking>=1.62.0, <1.74.0",
  "ntplib>=0.4.0",
  "zeroconf>=0.135.0",
  "psutil>=5.9.0",
  "numpy>=2.2.6", # For tensor operations and PyTorch compatibility
  "sortedcontainers>=2.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-mock>=3.14.1", 
    "pytest-timeout>=2.4.0",
    "pre-commit>=4.2.0",
    "ruff>=0.12.0",
    "black>=25.1.0",
    "mypy>=1.16.1",
    "import-linter>=2.3",
    "cryptography>=45.0.4", # For gRPC Unit Tests.

    # Typing, as below.
    "mypy-protobuf>=3.6.0",
    "types-psutil>=7.0.0",
    "types-requests>=2.32.4",
]
typing = [
    "mypy-protobuf>=3.6.0",
    "types-psutil>=7.0.0",
    "types-requests>=2.32.4",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-multiversion",
]

[project.urls]
Homepage = "https://github.com/rwkeane/tsercom"
Documentation = "https://github.com/rwkeane/tsercom"
Repository = "https://github.com/rwkeane/tsercom"
Issues = "https://github.com/rwkeane/tsercom/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["tsercom*"]
exclude = ["docs*", "tests*", "scripts"]

[tool.setuptools] # Add this section
package-dir = {"" = "."}
include-package-data = true # To let me include protos

[tool.setuptools_scm]
write_to = "tsercom/_version.py"
write_to_template = "__version__ = '{version}'"

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79  # Must match Black's line-length

[tool.ruff.lint]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    "**/*_pb2.py",     # Clearer exclusion for .py files
    "**/*_pb2.pyi",    # Explicitly exclude .pyi files
    "**/*_pb2_grpc.py", # Clearer exclusion
    "**/*_unittest.py", # Clearer exclusion
]
fixable = ["ALL"]

[tool.pytest.ini_options]
python_files = [
    "*_test.py",
    "*_tests.py",
    "*_unittest.py",
    "*_unittests.py",
    "*_e2etest.py",
    "*_e2etests.py",
]
python_classes = [
    "*Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "asyncio: mark a test as asynchronous (run by pytest-asyncio)",
]
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:cannot collect test class 'TestConnectionCall'.*has a __init__ constructor:pytest.PytestCollectionWarning",
    "ignore:cannot collect test class 'TestConnectionResponse'.*has a __init__ constructor:pytest.PytestCollectionWarning",
    "ignore:cannot collect test class 'E2ETestServiceStub'.*has a __init__ constructor:pytest.PytestCollectionWarning",
]

[tool.mypy]
strict = true
warn_unused_ignores = true
show_error_codes = true # Add for readability
check_untyped_defs = true  # Start with this
pretty = true
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".*_pb2.py",        # Exclude Protocol Buffer generated files
    ".*_pb2_grpc.py",   # Exclude gRPC generated files
    ".*_pb2.pyi",       # Exclude Protocol Buffer stub files
    "migrations",
    "scripts",
    # Exclude test files based on pytest configuration and common patterns
    # More specific paths:
    "tsercom/.*_test\\.py$",
    "tsercom/.*_tests\\.py$",
    "tsercom/.*_unittest\\.py$",
    "tsercom/.*_unittests\\.py$",
    "tsercom/.*_e2etest\\.py$",
    "tsercom/.*_e2etests\\.py$",
    # Also keep broader ones just in case, or if tests are outside tsercom
    ".*/.*_test\\.py$",
    ".*/.*_tests\\.py$",
    ".*/.*_unittest\\.py$",
    ".*/.*_unittests\\.py$",
    ".*/.*_e2etest\\.py$",
    ".*/.*_e2etests\\.py$",
    "tests/",
    "tsercom/test/"
]

[[tool.mypy.overrides]]
module = [
    "*.proto.*", 
    "*.proto", 
]
ignore_errors = true
disable_error_code = ["attr-defined"]

[[tool.mypy.overrides]]
module = [ "grpc.*", "grpc_status.*", "google.*", "grpcio.*" ]  # Target the grpc module and its submodules
ignore_missing_imports = true

[tool.pylint.MASTER]
# Comma-separated list of glob patterns for files/directories to ignore.
# This list consolidates exclusions from Ruff, Mypy, and setuptools configurations.
ignore-paths = [
    '^.git',
    '.*__pycache__/.*',
    '^build/.*',
    '^dist/.*',
    '^venv/.*',
    '^docs/.*',
    '^tests/.*',
    '^scripts/.*',
    # Protobuf and gRPC generated files (from Ruff and Mypy)
    '^.*_pb2.py',
    '^.*_pb2.pyi',
    '^.*_pb2_grpc.py',
    '^.*/proto/.*',
    # Test files (based on pytest config, Ruff, and Mypy exclusions)
    # These patterns should cover the specific ones in mypy and pytest
    '.*_test.py',
    '.*_tests.py',
    '.*_unittest.py',
    '.*_unittests.py',
    '.*_e2etest.py',
    '.*_e2etests.py',
    '^tsercom/_version\.py$',
]

[tool.pylint.format]
max-line-length = 80  # Differs with Black's and Ruff's line-length by design.

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "C0301",
    "R0801",
    "W0511",
    "W2301",
]

[tool.coverage.run]
source = ["tsercom"]
omit = [
    # Pytest discovery patterns
    "*_test.py",
    "*_tests.py",
    "*_unittest.py",
    "*_unittests.py",
    "*_e2etest.py",
    "*_e2etests.py",
    # Common test directory patterns
    "tsercom/tests/*",
    "tests/*",
    # Virtual environment
    "*/.venv/*",
    # Exclude generated protobuf files explicitly
    "tsercom/*/*_pb2.py",
    "tsercom/*/*_pb2_grpc.py",
    "tsercom/*/proto/*",
]

[tool.importlinter]
root_packages = ["tsercom"]
exclude_patterns = [
    # Exclude all common test file naming conventions.
    # This matches: _test.py, _tests.py, _unittest.py, _unittests.py, _e2etest.py, _e2etests.py
    ".*_((unit)?test|e2e)s?\\.py$",

    # Exclude common test directory patterns.
    "^tsercom/tests/.*",
    "^tests/.*",
    
    # Exclude the new test utilities directory.
    "^tsercom/test/.*",

    # Exclude virtual environment directories.
    ".*/\\.venv/.*",

    # Exclude generated protobuf files and their stub files (.pyi).
    ".*/_pb2(_grpc)?\\.pyi?$",

    # Exclude the contents of any 'proto' directory.
    "^tsercom/.*/proto/.*",
]

[[tool.importlinter.contracts]]
name = "'threading' module dependencies"
type = "forbidden"
source_modules = [
    "tsercom.threading",
]
forbidden_modules = [
    "tsercom.util",
    "tsercom.timesync",
    "tsercom.caller_id",
    "tsercom.data",
    "tsercom.tensor",
    "tsercom.discovery",
    "tsercom.rpc",
    "tsercom.runtime",
    "tsercom.api",
]

# --- Contract for 'util' ---
# 'util' can only depend on 'threading'.
[[tool.importlinter.contracts]]
name = "'util' module dependencies"
type = "forbidden"
source_modules = [
    "tsercom.util",
]
forbidden_modules = [
    "tsercom.threading",
    "tsercom.timesync",
    "tsercom.caller_id",
    "tsercom.data",
    "tsercom.tensor",
    "tsercom.discovery",
    "tsercom.rpc",
    "tsercom.runtime",
    "tsercom.api",
]

# --- Contracts for mid-level modules ---
# These can only depend on 'util' and 'threading'.
[[tool.importlinter.contracts]]
name = "'timesync', 'caller_id', 'discovery', 'rpc' module dependencies"
type = "forbidden"
source_modules = [
    "tsercom.timesync",
    "tsercom.caller_id",
    "tsercom.discovery",
    "tsercom.rpc",
]
forbidden_modules = [
    # They can't depend on each other or on higher-level modules.
    "tsercom.data",
    "tsercom.tensor",
    "tsercom.runtime",
    "tsercom.api",
]

# --- Contract for 'data' ---
# 'data' can depend on 'threading', 'util', 'timesync', 'caller_id'.
[[tool.importlinter.contracts]]
name = "'data' module dependencies"
type = "forbidden"
source_modules = [
    "tsercom.data",
]
forbidden_modules = [
    # It cannot depend on sibling/higher layers.
    "tsercom.tensor",
    "tsercom.discovery",
    "tsercom.rpc",
    "tsercom.runtime",
    "tsercom.api",
]

# --- Contract for 'tensor' ---
# 'tensor' can depend on 'data' and everything below it.
[[tool.importlinter.contracts]]
name = "'tensor' module dependencies"
type = "forbidden"
source_modules = [
    "tsercom.tensor",
]
forbidden_modules = [
    "tsercom.discovery",
    "tsercom.rpc",
    "tsercom.runtime",
    "tsercom.api",
]