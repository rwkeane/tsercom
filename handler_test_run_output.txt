============================= test session starts ==============================
platform linux -- Python 3.10.17, pytest-8.3.5, pluggy-1.5.0
rootdir: /app
configfile: pyproject.toml
plugins: asyncio-1.0.0, timeout-2.4.0, mock-3.14.1, anyio-4.9.0, cov-6.1.1, json-report-1.5.0, metadata-3.1.1
asyncio: mode=strict, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
timeout: 60.0s
timeout method: signal
timeout func_only: False
collected 11 items

tsercom/runtime/client/client_runtime_data_handler_unittest.py EEEEEE    [ 54%]
tsercom/runtime/server/server_runtime_data_handler_unittest.py EEEEE     [100%]

==================================== ERRORS ====================================
___________ ERROR at setup of TestClientRuntimeDataHandler.test_init ___________

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c436d0>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068039959280'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068039953952'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068039958320'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068039951456'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039952128'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421c425f0>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421c42290>
data_reader = <MagicMock spec='RemoteDataReader' id='140068039953952'>
event_source = <MagicMock spec='AsyncPoller' id='140068039958320'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_____ ERROR at setup of TestClientRuntimeDataHandler.test_register_caller ______

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c43430>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068040411744'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068040417024'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068040415152'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068040414768'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068040413664'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421cb0f40>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421c423e0>
data_reader = <MagicMock spec='RemoteDataReader' id='140068040417024'>
event_source = <MagicMock spec='AsyncPoller' id='140068040415152'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_ ERROR at setup of TestClientRuntimeDataHandler.test_unregister_caller_valid_id _

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c431c0>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068038884464'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068038877984'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068038875296'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068038876304'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068038872800'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421b3beb0>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421b3bd90>
data_reader = <MagicMock spec='RemoteDataReader' id='140068038877984'>
event_source = <MagicMock spec='AsyncPoller' id='140068038875296'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_ ERROR at setup of TestClientRuntimeDataHandler.test_unregister_caller_invalid_id_not_found _

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c42e90>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068038878032'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068038989360'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068038988640'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068038986624'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068038986144'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421b3b280>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421b55750>
data_reader = <MagicMock spec='RemoteDataReader' id='140068038989360'>
event_source = <MagicMock spec='AsyncPoller' id='140068038988640'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
____ ERROR at setup of TestClientRuntimeDataHandler.test_try_get_caller_id _____

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c42c80>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068040222336'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068040219360'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068040213216'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068040216816'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068040223152'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421c82800>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421c82860>
data_reader = <MagicMock spec='RemoteDataReader' id='140068040219360'>
event_source = <MagicMock spec='AsyncPoller' id='140068040213216'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_ ERROR at setup of TestClientRuntimeDataHandler.test_try_get_caller_id_not_found _

self = <tsercom.runtime.client.client_runtime_data_handler_unittest.TestClientRuntimeDataHandler object at 0x7f6421c42920>
mock_thread_watcher = <MagicMock spec='ThreadWatcher' id='140068039957888'>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068040423312'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068039964608'>
mock_time_sync_tracker_instance = <MagicMock spec='TimeSyncTracker' id='140068040422880'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039958032'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421c412a0>

    @pytest.fixture
    def handler_and_class_mocks(
        self,
        mock_thread_watcher,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_tracker_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up handler instance with mocked class dependencies (TimeSyncTracker, IdTracker)."""
        mock_TimeSyncTracker_class = mocker.patch(
            "tsercom.runtime.client.client_runtime_data_handler.TimeSyncTracker",
            return_value=mock_time_sync_tracker_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ClientRuntimeDataHandler(
            thread_watcher=mock_thread_watcher,
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
        )

tsercom/runtime/client/client_runtime_data_handler_unittest.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/client/client_runtime_data_handler.py:58: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.client.client_runtime_data_handler.ClientRuntimeDataHandler object at 0x7f6421b24310>
data_reader = <MagicMock spec='RemoteDataReader' id='140068040423312'>
event_source = <MagicMock spec='AsyncPoller' id='140068039964608'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
___________ ERROR at setup of TestServerRuntimeDataHandler.test_init ___________

self = <tsercom.runtime.server.server_runtime_data_handler_unittest.TestServerRuntimeDataHandler object at 0x7f6421c40310>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068040413040'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068038960480'>
mock_time_sync_server_instance = <MagicMock spec='TimeSyncServer' id='140068038959760'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068038957936'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421cb1a50>

    @pytest.fixture
    def handler_with_mocks(
        self,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_server_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up ServerRuntimeDataHandler with mocked class dependencies."""
        mock_TimeSyncServer_class = mocker.patch(
            "tsercom.runtime.server.server_runtime_data_handler.TimeSyncServer",
            return_value=mock_time_sync_server_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ServerRuntimeDataHandler(
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
            is_testing=False,
        )

tsercom/runtime/server/server_runtime_data_handler_unittest.py:76:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/server/server_runtime_data_handler.py:59: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.server.server_runtime_data_handler.ServerRuntimeDataHandler object at 0x7f6421b4e5c0>
data_reader = <MagicMock spec='RemoteDataReader' id='140068040413040'>
event_source = <MagicMock spec='AsyncPoller' id='140068038960480'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_____ ERROR at setup of TestServerRuntimeDataHandler.test_register_caller ______

self = <tsercom.runtime.server.server_runtime_data_handler_unittest.TestServerRuntimeDataHandler object at 0x7f6421c41990>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068038963024'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068038986432'>
mock_time_sync_server_instance = <MagicMock spec='TimeSyncServer' id='140068040324912'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039268368'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421c9ad10>

    @pytest.fixture
    def handler_with_mocks(
        self,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_server_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up ServerRuntimeDataHandler with mocked class dependencies."""
        mock_TimeSyncServer_class = mocker.patch(
            "tsercom.runtime.server.server_runtime_data_handler.TimeSyncServer",
            return_value=mock_time_sync_server_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ServerRuntimeDataHandler(
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
            is_testing=False,
        )

tsercom/runtime/server/server_runtime_data_handler_unittest.py:76:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/server/server_runtime_data_handler.py:59: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.server.server_runtime_data_handler.ServerRuntimeDataHandler object at 0x7f6421b98400>
data_reader = <MagicMock spec='RemoteDataReader' id='140068038963024'>
event_source = <MagicMock spec='AsyncPoller' id='140068038986432'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
____ ERROR at setup of TestServerRuntimeDataHandler.test_unregister_caller _____

self = <tsercom.runtime.server.server_runtime_data_handler_unittest.TestServerRuntimeDataHandler object at 0x7f6421c41480>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068039263472'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068039081600'>
mock_time_sync_server_instance = <MagicMock spec='TimeSyncServer' id='140068039079248'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039201056'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421b99e10>

    @pytest.fixture
    def handler_with_mocks(
        self,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_server_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up ServerRuntimeDataHandler with mocked class dependencies."""
        mock_TimeSyncServer_class = mocker.patch(
            "tsercom.runtime.server.server_runtime_data_handler.TimeSyncServer",
            return_value=mock_time_sync_server_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ServerRuntimeDataHandler(
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
            is_testing=False,
        )

tsercom/runtime/server/server_runtime_data_handler_unittest.py:76:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/server/server_runtime_data_handler.py:59: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.server.server_runtime_data_handler.ServerRuntimeDataHandler object at 0x7f6421b8bf40>
data_reader = <MagicMock spec='RemoteDataReader' id='140068039263472'>
event_source = <MagicMock spec='AsyncPoller' id='140068039081600'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
____ ERROR at setup of TestServerRuntimeDataHandler.test_try_get_caller_id _____

self = <tsercom.runtime.server.server_runtime_data_handler_unittest.TestServerRuntimeDataHandler object at 0x7f6421c41c90>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068039068688'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068039072240'>
mock_time_sync_server_instance = <MagicMock spec='TimeSyncServer' id='140068039069600'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039198896'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421b68790>

    @pytest.fixture
    def handler_with_mocks(
        self,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_server_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up ServerRuntimeDataHandler with mocked class dependencies."""
        mock_TimeSyncServer_class = mocker.patch(
            "tsercom.runtime.server.server_runtime_data_handler.TimeSyncServer",
            return_value=mock_time_sync_server_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ServerRuntimeDataHandler(
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
            is_testing=False,
        )

tsercom/runtime/server/server_runtime_data_handler_unittest.py:76:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/server/server_runtime_data_handler.py:59: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.server.server_runtime_data_handler.ServerRuntimeDataHandler object at 0x7f6421b88040>
data_reader = <MagicMock spec='RemoteDataReader' id='140068039068688'>
event_source = <MagicMock spec='AsyncPoller' id='140068039072240'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
_ ERROR at setup of TestServerRuntimeDataHandler.test_try_get_caller_id_not_found _

self = <tsercom.runtime.server.server_runtime_data_handler_unittest.TestServerRuntimeDataHandler object at 0x7f6421c420b0>
mock_data_reader = <MagicMock spec='RemoteDataReader' id='140068039466752'>
mock_event_source_poller = <MagicMock spec='AsyncPoller' id='140068039469296'>
mock_time_sync_server_instance = <MagicMock spec='TimeSyncServer' id='140068039467904'>
mock_id_tracker_instance = <MagicMock spec='IdTracker' id='140068039473760'>
mocker = <pytest_mock.plugin.MockerFixture object at 0x7f6421bc9ed0>

    @pytest.fixture
    def handler_with_mocks(
        self,
        mock_data_reader,
        mock_event_source_poller,
        mock_time_sync_server_instance,
        mock_id_tracker_instance,
        mocker,
    ):
        """Sets up ServerRuntimeDataHandler with mocked class dependencies."""
        mock_TimeSyncServer_class = mocker.patch(
            "tsercom.runtime.server.server_runtime_data_handler.TimeSyncServer",
            return_value=mock_time_sync_server_instance,
            autospec=True,
        )
        mock_IdTracker_class = mocker.patch(
            "tsercom.runtime.runtime_data_handler_base.IdTracker",
            return_value=mock_id_tracker_instance,
            autospec=True,
        )

>       handler_instance = ServerRuntimeDataHandler(
            data_reader=mock_data_reader,
            event_source=mock_event_source_poller,
            is_testing=False,
        )

tsercom/runtime/server/server_runtime_data_handler_unittest.py:76:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tsercom/runtime/server/server_runtime_data_handler.py:59: in __init__
    super().__init__(data_reader, event_source, min_send_frequency_seconds)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <tsercom.runtime.server.server_runtime_data_handler.ServerRuntimeDataHandler object at 0x7f6421b8e0e0>
data_reader = <MagicMock spec='RemoteDataReader' id='140068039466752'>
event_source = <MagicMock spec='AsyncPoller' id='140068039469296'>
min_send_frequency_seconds = None

    def __init__(
        self,
        data_reader: RemoteDataReader[AnnotatedInstance[DataTypeT]],
        event_source: AsyncPoller[SerializableAnnotatedInstance[EventTypeT]],
        min_send_frequency_seconds: float | None = None,
    ):
        """Initializes RuntimeDataHandlerBase.

        Args:
            data_reader: The `RemoteDataReader` to sink data into.
            event_source: The `AsyncPoller` to source event data from.
        """
        super().__init__()
        self.__data_reader = data_reader
        self.__event_source = event_source
>       self.__id_tracker = IdTracker[
            AsyncPoller[SerializableAnnotatedInstance[EventTypeT]]
        ](
            partial(
                AsyncPoller,
                min_poll_frequency_seconds=min_send_frequency_seconds,
            )
        )
E       TypeError: 'MagicMock' object is not subscriptable

tsercom/runtime/runtime_data_handler_base.py:63: TypeError
=========================== short test summary info ============================
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_init
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_register_caller
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_unregister_caller_valid_id
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_unregister_caller_invalid_id_not_found
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_try_get_caller_id
ERROR tsercom/runtime/client/client_runtime_data_handler_unittest.py::TestClientRuntimeDataHandler::test_try_get_caller_id_not_found
ERROR tsercom/runtime/server/server_runtime_data_handler_unittest.py::TestServerRuntimeDataHandler::test_init
ERROR tsercom/runtime/server/server_runtime_data_handler_unittest.py::TestServerRuntimeDataHandler::test_register_caller
ERROR tsercom/runtime/server/server_runtime_data_handler_unittest.py::TestServerRuntimeDataHandler::test_unregister_caller
ERROR tsercom/runtime/server/server_runtime_data_handler_unittest.py::TestServerRuntimeDataHandler::test_try_get_caller_id
ERROR tsercom/runtime/server/server_runtime_data_handler_unittest.py::TestServerRuntimeDataHandler::test_try_get_caller_id_not_found
============================== 11 errors in 0.39s ==============================
